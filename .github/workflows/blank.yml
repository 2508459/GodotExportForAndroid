# Whenever a tag push matching pattern "v*" then run the job
on: 
  push:
    tags:
      - "v*"

jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
      # Always include the checkout step so that 
      # your project is available for Godot to export
    - name: checkout
      uses: actions/checkout@v3.3.0
    - name: Decrypt Game
      run: |
        unzip -P "${GDC_PASSWORD}" src.zip
      env:
        GDC_PASSWORD: ${{ secrets.GDC_PASSWORD }}
    - name: Export Game
      id: export
      # Use latest version (see releases for all versions)
      uses: Genouka/godot-export@v1
      with:
        # Defining all the required inputs
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.1.1-stable/Godot_v4.1.1-stable_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.1.1-stable/Godot_v4.1.1-stable_export_templates.tpz
        relative_project_path: ./
        archive_output: true
    - name: Encrypt Results
      run: |
        zip -P "${GDC_PASSWORD}" dest.zip "${path}"
        echo "DEST_FILE_PATH=$(find ./ -name 'dest.zip')" >> $GITHUB_ENV
  
      env:
        GDC_PASSWORD: ${{ secrets.GDC_PASSWORD }}
        path: ${{ steps.export.outputs.archive_directory }}
    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        path: ${{ env.DEST_FILE_PATH }}
        name: release-${{ github.event.head_commit.id }}-arm32
